name: Elixir CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest #kinda standard
    env:
      MIX_ENV: test
      SENPAI_DB_USER: postgres
      SENPAI_DB_PASSWORD: ""
      SENPAI_DB_HOST: postgres
      SENPAI_DB_TEST_PORT: 5432
      SENPAI_DB_NAME: senpai_db_test
      SENPAI_TEST_WEB_PORT: 4001
    services:
      postgres:
        image: postgres:17-alpine 
        env:
          POSTGRES_HOST_AUTH_METHOD: trust # Easiest for CI, no password needed
          POSTGRES_DB: senpai_db_test 
          POSTGRES_USER: postgres 
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-elixir@v1
        with:
          elixir-version: '1.18.3' # copied from the elixir -v command ðŸ¦œ
          otp-version: '27'      


#gemini said thats how they handle caching in elixir CI 
      - name: Restore dependencies cache
        uses: actions/cache@v4
        id: deps-cache
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        if: steps.deps-cache.outputs.cache-hit != 'true'
        run: mix deps.get

      - name: Debug DNS for postgres (before compile)
        run: |
          echo "Attempting to resolve postgres..."
          nslookup postgres
          echo "Attempting to ping postgres..."
          ping -c 3 postgres

      - name: Check formatting
        run: mix format --check-formatted

      - name: Compile with warnings as errors
        run: mix compile --warnings-as-errors

      - name: Debug DNS for postgres (before test)
        run: |
          echo "Attempting to resolve postgres..."
          nslookup postgres
          echo "Attempting to ping postgres..."
          ping -c 3 postgres

      - name: Run tests
        run: mix test